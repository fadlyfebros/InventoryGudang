package view;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */

/**
 *
 * @author GILANG RUBIYANA
 */

import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.Icon;
import javax.swing.Timer;

public class MenuItem extends javax.swing.JPanel {

    /**
     * @return the subMenu
     */
    public ArrayList<MenuItem> getSubMenu() {
        return subMenu;
    }

    /**
     * Creates new form MenuItem
     */
    
    private final ArrayList<MenuItem> subMenu = new ArrayList<>();
    
    private ActionListener act;
    public MenuItem(Icon icon, boolean sbm, Icon iconSub, String menuName, ActionListener act, MenuItem... subMenu) {
        initComponents();
        
        label_icon.setIcon(icon);
        label_utama.setText(menuName);
        label_iconsub.setIcon(iconSub);
        label_iconsub.setVisible(sbm);
        
        if (act != null){
            this.act = act;
        }
        this.setSize(new Dimension(Integer.MAX_VALUE, 45));
        this.setMaximumSize(new Dimension(Integer.MAX_VALUE, 45));
        this.setMinimumSize(new Dimension(Integer.MAX_VALUE, 45));
        for (int i = 0; i < subMenu.length; i++){
            this.subMenu.add(subMenu[i]);
            subMenu[i].setVisible(false);
        }
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label_utama = new javax.swing.JLabel();
        label_icon = new javax.swing.JLabel();
        label_iconsub = new javax.swing.JLabel();

        setBackground(new java.awt.Color(34, 45, 50));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        label_utama.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        label_utama.setForeground(new java.awt.Color(255, 255, 255));
        label_utama.setText("jLabel1");

        label_iconsub.setBackground(new java.awt.Color(30, 40, 44));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label_iconsub, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(label_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label_utama, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(label_icon, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(label_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE)
                    .addComponent(label_iconsub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean showing = false;
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        if (showing) {
            hideMenu();
        } else {
            showMenu();
        }
        if (act != null) {
            act.actionPerformed(new java.awt.event.ActionEvent(this, java.awt.event.ActionEvent.ACTION_PERFORMED, null));
        }
    }//GEN-LAST:event_formMousePressed

    private void animateMove() {
        int originalX = 0;
        int targetX = showing ? originalX : originalX + 10;
        Timer timer = new Timer(20, null);
        timer.addActionListener(e -> {
            int currentX = this.getLocation().x;
            if ((showing && currentX > targetX) || (!showing && currentX < targetX)) {
                this.setLocation(currentX + (showing ? -1 : 1), this.getLocation().y);
                getParent().revalidate();
            } else {
                timer.stop();
            }
        });
        timer.start();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel label_icon;
    private javax.swing.JLabel label_iconsub;
    private javax.swing.JLabel label_utama;
    // End of variables declaration//GEN-END:variables

    private void hideMenu() {
        for (int i = subMenu.size() - 1; i >= 0; i--) {
            subMenu.get(i).setVisible(false);
        }
        showing = false;
        getParent().repaint();
        getParent().revalidate();
    }

    private void showMenu() {
        for (int i = 0; i < subMenu.size(); i++) {
            subMenu.get(i).setVisible(true);
        }
        showing = true;
        getParent().repaint();
        getParent().revalidate();
    }
    private void sleep() {
        try {
            Thread.sleep(20);
        } catch (Exception e){
            e.printStackTrace();
        }
    }

    String getText() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
}
